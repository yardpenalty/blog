tinymce.PluginManager.add("importcss",function(n){function i(n){return typeof n=="string"?function(t){return t.indexOf(n)!==-1}:n instanceof RegExp?function(t){return n.test(t)}:n}function f(i,r){function u(n,i){var o=n.href,s;if((i||e[o])&&(!r||r(o))){t(n.imports,function(n){u(n,!0)});try{s=n.cssRules||n.rules}catch(h){}t(s,function(n){n.styleSheet?u(n.styleSheet,!0):n.selectorText&&t(n.selectorText.split(","),function(n){f.push(tinymce.trim(n))})})}}var f=[],e={};t(n.contentCSS,function(n){e[n]=!0});try{t(i.styleSheets,function(n){u(n)})}catch(o){}return f}function u(t){var i,u=/^(?:([a-z0-9\-_]+))?(\.[a-z0-9_\-\.]+)$/i.exec(t),r,f;if(u)return r=u[1],f=u[2].substr(1).split(".").join(" "),u[1]?(i={title:t},n.schema.getTextBlockElements()[r]?i.block=r:n.schema.getBlockElements()[r]?i.selector=r:i.inline=r):u[2]&&(i={inline:"span",title:t.substr(1),classes:f}),n.settings.importcss_merge_classes!==!1?i.classes=f:i.attributes={"class":f},i}var r=this,t=tinymce.each;if(!n.settings.style_formats)n.on("renderFormatsMenu",function(e){var h=n.settings,c={},a=h.importcss_selector_converter||u,l=i(h.importcss_selector_filter),o,s;if(n.settings.importcss_append||e.control.items().remove(),o=h.importcss_groups,o)for(s=0;s<o.length;s++)o[s].filter=i(o[s].filter);t(f(n.getDoc(),i(h.importcss_file_filter)),function(t){var u,f,s,i,h;if(t.indexOf(".mce-")===-1&&!c[t]&&(!l||l(t))){if(u=a.call(r,t),u){if(s=u.name||tinymce.DOM.uniqueId(),o)for(i=0;i<o.length;i++)if(!o[i].filter||o[i].filter(t)){o[i].item||(o[i].item={text:o[i].title,menu:[]});f=o[i].item.menu;break}n.formatter.register(s,u);h=tinymce.extend({},e.control.settings.itemDefaults,{text:u.title,format:s});f?f.push(h):e.control.add(h)}c[t]=!0}});t(o,function(n){e.control.add(n.item)});e.control.renderNew()});r.convertSelectorToFormat=u});
/*
//# sourceMappingURL=plugin.min.js.map
*/